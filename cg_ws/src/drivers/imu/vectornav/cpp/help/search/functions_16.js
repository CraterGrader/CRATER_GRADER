var searchData=
[
  ['wait',['wait',['../classvn_1_1xplat_1_1_event.html#a5800f6e7a1d8df87b3efee24f6caea5a',1,'vn::xplat::Event']]],
  ['waitms',['waitMs',['../classvn_1_1xplat_1_1_event.html#a4f1b3a0052483d23ca22ed934fff6d9f',1,'vn::xplat::Event']]],
  ['waitus',['waitUs',['../classvn_1_1xplat_1_1_event.html#a746527eaf0895de79754fb98e25f87cc',1,'vn::xplat::Event']]],
  ['week',['week',['../classvn_1_1sensors_1_1_composite_data.html#acefe130978e99e83a48ea9624aa5142a',1,'vn::sensors::CompositeData']]],
  ['what',['what',['../classvn_1_1timeout.html#a7564b1e628fc67254e7935135388f32d',1,'vn::timeout::what()'],['../structvn_1_1sensors_1_1sensor__error.html#a611745215da79a4d5feb589d7579746f',1,'vn::sensors::sensor_error::what()']]],
  ['write',['write',['../classvn_1_1util_1_1_memory_port.html#a27eea26377dc1f37cc5f431ea501d14f',1,'vn::util::MemoryPort::write()'],['../classvn_1_1xplat_1_1_i_port.html#af8892d4e69e30618b6a55279251cd79d',1,'vn::xplat::IPort::write()'],['../classvn_1_1xplat_1_1_serial_port.html#a14c967e8f5ba4533824eb82a674113a4',1,'vn::xplat::SerialPort::write()']]],
  ['writeaccelerationcompensation',['writeAccelerationCompensation',['../group__register_access_methods.html#gaf630cdbee82d9e3241021756d5058e7a',1,'vn::sensors::VnSensor::writeAccelerationCompensation(AccelerationCompensationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gac9ceeca971b74e962e6311f07e006294',1,'vn::sensors::VnSensor::writeAccelerationCompensation(const vn::math::mat3f &amp;c, const vn::math::vec3f &amp;b, bool waitForReply=true)']]],
  ['writeasyncdataoutputfrequency',['writeAsyncDataOutputFrequency',['../group__register_access_methods.html#ga18883286254c23e521bd2f6e5df4057e',1,'vn::sensors::VnSensor::writeAsyncDataOutputFrequency(const uint32_t &amp;adof, uint8_t port, bool waitForReply=true)'],['../group__register_access_methods.html#ga1ceb19fd78ff5b8c6cb45d53a0032be4',1,'vn::sensors::VnSensor::writeAsyncDataOutputFrequency(const uint32_t &amp;adof, bool waitForReply=true)']]],
  ['writeasyncdataoutputtype',['writeAsyncDataOutputType',['../group__register_access_methods.html#gac63e50c05591e083bbd6c6e20ca04482',1,'vn::sensors::VnSensor::writeAsyncDataOutputType(protocol::uart::AsciiAsync ador, uint8_t port, bool waitForReply=true)'],['../group__register_access_methods.html#gaaabad06efc3f232421461435f6f9c422',1,'vn::sensors::VnSensor::writeAsyncDataOutputType(protocol::uart::AsciiAsync ador, bool waitForReply=true)']]],
  ['writebinaryoutput1',['writeBinaryOutput1',['../group__register_access_methods.html#ga5906fa2c66c3b9a1c2cbfb723cc1d7e5',1,'vn::sensors::VnSensor']]],
  ['writebinaryoutput2',['writeBinaryOutput2',['../group__register_access_methods.html#ga1238bddea137af99f64346fb1c6a2325',1,'vn::sensors::VnSensor']]],
  ['writebinaryoutput3',['writeBinaryOutput3',['../group__register_access_methods.html#ga7ae64ad28e1dd988d1755b2f7b436e63',1,'vn::sensors::VnSensor']]],
  ['writecommunicationprotocolcontrol',['writeCommunicationProtocolControl',['../group__register_access_methods.html#ga0764c0f5a12339dffc09821e6c2f1858',1,'vn::sensors::VnSensor::writeCommunicationProtocolControl(CommunicationProtocolControlRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gab538562f30544d6f95a07b84dd0c2b1d',1,'vn::sensors::VnSensor::writeCommunicationProtocolControl(protocol::uart::CountMode serialCount, protocol::uart::StatusMode serialStatus, protocol::uart::CountMode spiCount, protocol::uart::StatusMode spiStatus, protocol::uart::ChecksumMode serialChecksum, protocol::uart::ChecksumMode spiChecksum, protocol::uart::ErrorMode errorMode, bool waitForReply=true)']]],
  ['writedeltathetaanddeltavelocityconfiguration',['writeDeltaThetaAndDeltaVelocityConfiguration',['../group__register_access_methods.html#ga13962e60dca79a07af288fa3f83edb0f',1,'vn::sensors::VnSensor::writeDeltaThetaAndDeltaVelocityConfiguration(DeltaThetaAndDeltaVelocityConfigurationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga05c5e3791810bc12027c4edde3dc3eb4',1,'vn::sensors::VnSensor::writeDeltaThetaAndDeltaVelocityConfiguration(protocol::uart::IntegrationFrame integrationFrame, protocol::uart::CompensationMode gyroCompensation, protocol::uart::CompensationMode accelCompensation, bool waitForReply=true)']]],
  ['writefilteractivetuningparameters',['writeFilterActiveTuningParameters',['../group__register_access_methods.html#ga3966f4f14b6827f49b22ac296a08af7d',1,'vn::sensors::VnSensor::writeFilterActiveTuningParameters(FilterActiveTuningParametersRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gaa9e39075ca248a8352c141b41b15d53c',1,'vn::sensors::VnSensor::writeFilterActiveTuningParameters(const float &amp;magneticDisturbanceGain, const float &amp;accelerationDisturbanceGain, const float &amp;magneticDisturbanceMemory, const float &amp;accelerationDisturbanceMemory, bool waitForReply=true)']]],
  ['writefilterbasiccontrol',['writeFilterBasicControl',['../group__register_access_methods.html#ga7811f990ea16804d0318c2e03df642f0',1,'vn::sensors::VnSensor::writeFilterBasicControl(FilterBasicControlRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga3cce2c774178412211b8f0f9c1f64e19',1,'vn::sensors::VnSensor::writeFilterBasicControl(protocol::uart::MagneticMode magMode, protocol::uart::ExternalSensorMode extMagMode, protocol::uart::ExternalSensorMode extAccMode, protocol::uart::ExternalSensorMode extGyroMode, const vn::math::vec3f &amp;gyroLimit, bool waitForReply=true)']]],
  ['writefiltermeasurementsvarianceparameters',['writeFilterMeasurementsVarianceParameters',['../group__register_access_methods.html#gaaa5c47e69c177dc9993dfea11ea5716b',1,'vn::sensors::VnSensor::writeFilterMeasurementsVarianceParameters(FilterMeasurementsVarianceParametersRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga924d80b13e904f91994d0209e94b7c57',1,'vn::sensors::VnSensor::writeFilterMeasurementsVarianceParameters(const float &amp;angularWalkVariance, const vn::math::vec3f &amp;angularRateVariance, const vn::math::vec3f &amp;magneticVariance, const vn::math::vec3f &amp;accelerationVariance, bool waitForReply=true)']]],
  ['writefilterstartupgyrobias',['writeFilterStartupGyroBias',['../group__register_access_methods.html#ga9c4f99160fcd607b5210874f4b24680e',1,'vn::sensors::VnSensor']]],
  ['writegpsantennaoffset',['writeGpsAntennaOffset',['../group__register_access_methods.html#ga9c1dcfe41e7401a9ad4275d8dd4a3d8f',1,'vn::sensors::VnSensor']]],
  ['writegpscompassbaseline',['writeGpsCompassBaseline',['../group__register_access_methods.html#gaf6caa3e89737c9f1556c4b7069f9910f',1,'vn::sensors::VnSensor::writeGpsCompassBaseline(GpsCompassBaselineRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga3ce9f97bd0621cf7b214593a8781f9e5',1,'vn::sensors::VnSensor::writeGpsCompassBaseline(const vn::math::vec3f &amp;position, const vn::math::vec3f &amp;uncertainty, bool waitForReply=true)']]],
  ['writegpsconfiguration',['writeGpsConfiguration',['../group__register_access_methods.html#ga7b0536d41c22083e1fb61f74c0f61ea5',1,'vn::sensors::VnSensor::writeGpsConfiguration(GpsConfigurationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga0f3b283c0f7f2e3ec6a6ba0f4af0bb00',1,'vn::sensors::VnSensor::writeGpsConfiguration(protocol::uart::GpsMode mode, protocol::uart::PpsSource ppsSource, bool waitForReply=true)']]],
  ['writegyrocompensation',['writeGyroCompensation',['../group__register_access_methods.html#ga679e47947ce13eeec751ecb93109fc75',1,'vn::sensors::VnSensor::writeGyroCompensation(GyroCompensationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga818f1102397399b6bd15ebe10f2ba84d',1,'vn::sensors::VnSensor::writeGyroCompensation(const vn::math::mat3f &amp;c, const vn::math::vec3f &amp;b, bool waitForReply=true)']]],
  ['writeimufilteringconfiguration',['writeImuFilteringConfiguration',['../group__register_access_methods.html#gac1f6690fb322b93e678cdc3e3e16cf26',1,'vn::sensors::VnSensor::writeImuFilteringConfiguration(ImuFilteringConfigurationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gad58b5e52ce0d52e2d5e19f34fefb9315',1,'vn::sensors::VnSensor::writeImuFilteringConfiguration(const uint16_t &amp;magWindowSize, const uint16_t &amp;accelWindowSize, const uint16_t &amp;gyroWindowSize, const uint16_t &amp;tempWindowSize, const uint16_t &amp;presWindowSize, protocol::uart::FilterMode magFilterMode, protocol::uart::FilterMode accelFilterMode, protocol::uart::FilterMode gyroFilterMode, protocol::uart::FilterMode tempFilterMode, protocol::uart::FilterMode presFilterMode, bool waitForReply=true)']]],
  ['writeimurateconfiguration',['writeImuRateConfiguration',['../group__register_access_methods.html#gaeee3871dedb7925a2ee1085823916c94',1,'vn::sensors::VnSensor::writeImuRateConfiguration(ImuRateConfigurationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga822138d37fc5d7018c4e54a3c5b3b386',1,'vn::sensors::VnSensor::writeImuRateConfiguration(const uint16_t &amp;imuRate, const uint16_t &amp;navDivisor, const float &amp;filterTargetRate, const float &amp;filterMinRate, bool waitForReply=true)']]],
  ['writeindoorheadingmodecontrol',['writeIndoorHeadingModeControl',['../group__register_access_methods.html#gab5f27ba5a395e999e46528dc551ab6c4',1,'vn::sensors::VnSensor']]],
  ['writeinsadvancedconfiguration',['writeInsAdvancedConfiguration',['../group__register_access_methods.html#ga10ebb5e243084693c04ce6ef94c67ebc',1,'vn::sensors::VnSensor::writeInsAdvancedConfiguration(InsAdvancedConfigurationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga81cec7636df963518a0c2d15e2614216',1,'vn::sensors::VnSensor::writeInsAdvancedConfiguration(const uint8_t &amp;useMag, const uint8_t &amp;usePres, const uint8_t &amp;posAtt, const uint8_t &amp;velAtt, const uint8_t &amp;velBias, protocol::uart::FoamInit useFoam, const uint8_t &amp;gpsCovType, const uint8_t &amp;velCount, const float &amp;velInit, const float &amp;moveOrigin, const float &amp;gpsTimeout, const float &amp;deltaLimitPos, const float &amp;deltaLimitVel, const float &amp;minPosUncertainty, const float &amp;minVelUncertainty, bool waitForReply=true)']]],
  ['writeinsbasicconfigurationvn200',['writeInsBasicConfigurationVn200',['../group__register_access_methods.html#ga3dd7c5e65b6a5e136291944900180312',1,'vn::sensors::VnSensor::writeInsBasicConfigurationVn200(InsBasicConfigurationRegisterVn200 &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gafda63073256049d8dd971701a63e648f',1,'vn::sensors::VnSensor::writeInsBasicConfigurationVn200(protocol::uart::Scenario scenario, const uint8_t &amp;ahrsAiding, bool waitForReply=true)']]],
  ['writeinsbasicconfigurationvn300',['writeInsBasicConfigurationVn300',['../group__register_access_methods.html#ga8903c5935d68eb19afe5750548ad1e66',1,'vn::sensors::VnSensor::writeInsBasicConfigurationVn300(InsBasicConfigurationRegisterVn300 &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gaa981ed10ec65957b8b4d735b6eae1c21',1,'vn::sensors::VnSensor::writeInsBasicConfigurationVn300(protocol::uart::Scenario scenario, const uint8_t &amp;ahrsAiding, const uint8_t &amp;estBaseline, bool waitForReply=true)']]],
  ['writemagneticandgravityreferencevectors',['writeMagneticAndGravityReferenceVectors',['../group__register_access_methods.html#ga929f1fda2950e5f4b948e9fbbb08a1ac',1,'vn::sensors::VnSensor::writeMagneticAndGravityReferenceVectors(MagneticAndGravityReferenceVectorsRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga4089ffc5f75b2759c003c048fcf3d6f7',1,'vn::sensors::VnSensor::writeMagneticAndGravityReferenceVectors(const vn::math::vec3f &amp;magRef, const vn::math::vec3f &amp;accRef, bool waitForReply=true)']]],
  ['writemagnetometercalibrationcontrol',['writeMagnetometerCalibrationControl',['../group__register_access_methods.html#ga65b6ec78264fca9e5c103a6dd43346fd',1,'vn::sensors::VnSensor::writeMagnetometerCalibrationControl(MagnetometerCalibrationControlRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gabf81ceb6c5d444c5f2e20d9fd047710c',1,'vn::sensors::VnSensor::writeMagnetometerCalibrationControl(protocol::uart::HsiMode hsiMode, protocol::uart::HsiOutput hsiOutput, const uint8_t &amp;convergeRate, bool waitForReply=true)']]],
  ['writemagnetometercompensation',['writeMagnetometerCompensation',['../group__register_access_methods.html#ga67905258a304151c3bc64991bf6abf05',1,'vn::sensors::VnSensor::writeMagnetometerCompensation(MagnetometerCompensationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga6432656e66351132ad346022a4a6aa89',1,'vn::sensors::VnSensor::writeMagnetometerCompensation(const vn::math::mat3f &amp;c, const vn::math::vec3f &amp;b, bool waitForReply=true)']]],
  ['writereferenceframerotation',['writeReferenceFrameRotation',['../group__register_access_methods.html#ga00499c3b5508301ddc242b925c13527b',1,'vn::sensors::VnSensor']]],
  ['writereferencevectorconfiguration',['writeReferenceVectorConfiguration',['../group__register_access_methods.html#ga10af7ea031fcfa8580912dd730e37567',1,'vn::sensors::VnSensor::writeReferenceVectorConfiguration(ReferenceVectorConfigurationRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gaa802d815a9d6b15239ad029dc4f5336d',1,'vn::sensors::VnSensor::writeReferenceVectorConfiguration(const uint8_t &amp;useMagModel, const uint8_t &amp;useGravityModel, const uint32_t &amp;recalcThreshold, const float &amp;year, const vn::math::vec3d &amp;position, bool waitForReply=true)']]],
  ['writeserialbaudrate',['writeSerialBaudRate',['../group__register_access_methods.html#gafbb6e63d19adcf264c4472fcaf1bfd7e',1,'vn::sensors::VnSensor::writeSerialBaudRate(const uint32_t &amp;baudrate, uint8_t port, bool waitForReply=true)'],['../group__register_access_methods.html#ga0b377d240397af66e3a8299cd2f220a1',1,'vn::sensors::VnSensor::writeSerialBaudRate(const uint32_t &amp;baudrate, bool waitForReply=true)']]],
  ['writesettings',['writeSettings',['../classvn_1_1sensors_1_1_vn_sensor.html#a5728d83a27496a578bf632858bbdc7c5',1,'vn::sensors::VnSensor']]],
  ['writestartupfilterbiasestimate',['writeStartupFilterBiasEstimate',['../group__register_access_methods.html#ga94c5b527fdfdbc9b623e1228605c42c6',1,'vn::sensors::VnSensor::writeStartupFilterBiasEstimate(StartupFilterBiasEstimateRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga03053de5ef234e2349ffe0a82ccac601',1,'vn::sensors::VnSensor::writeStartupFilterBiasEstimate(const vn::math::vec3f &amp;gyroBias, const vn::math::vec3f &amp;accelBias, const float &amp;pressureBias, bool waitForReply=true)']]],
  ['writesynchronizationcontrol',['writeSynchronizationControl',['../group__register_access_methods.html#gab8d82aab72d8ccac04a0fcf9949a282b',1,'vn::sensors::VnSensor::writeSynchronizationControl(SynchronizationControlRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gae32420cc5f20350a7e7284b221bfceec',1,'vn::sensors::VnSensor::writeSynchronizationControl(protocol::uart::SyncInMode syncInMode, protocol::uart::SyncInEdge syncInEdge, const uint16_t &amp;syncInSkipFactor, protocol::uart::SyncOutMode syncOutMode, protocol::uart::SyncOutPolarity syncOutPolarity, const uint16_t &amp;syncOutSkipFactor, const uint32_t &amp;syncOutPulseWidth, bool waitForReply=true)']]],
  ['writesynchronizationstatus',['writeSynchronizationStatus',['../group__register_access_methods.html#gad428a726e81f4c42893292e75b06176d',1,'vn::sensors::VnSensor::writeSynchronizationStatus(SynchronizationStatusRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga959697e57e49532435fdb987410094ae',1,'vn::sensors::VnSensor::writeSynchronizationStatus(const uint32_t &amp;syncInCount, const uint32_t &amp;syncInTime, const uint32_t &amp;syncOutCount, bool waitForReply=true)']]],
  ['writeusertag',['writeUserTag',['../group__register_access_methods.html#gacb119c8e56a90cdf6182c180bf13cf97',1,'vn::sensors::VnSensor']]],
  ['writevelocitycompensationcontrol',['writeVelocityCompensationControl',['../group__register_access_methods.html#ga3e935f7f89d991edd0501f7963b79d51',1,'vn::sensors::VnSensor::writeVelocityCompensationControl(VelocityCompensationControlRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga466196bb2fc360129826cd5699634eb7',1,'vn::sensors::VnSensor::writeVelocityCompensationControl(protocol::uart::VelocityCompensationMode mode, const float &amp;velocityTuning, const float &amp;rateTuning, bool waitForReply=true)']]],
  ['writevelocitycompensationmeasurement',['writeVelocityCompensationMeasurement',['../group__register_access_methods.html#ga98556c11d44b023c3cc1d4be70b905d3',1,'vn::sensors::VnSensor']]],
  ['writevpeaccelerometeradvancedtuning',['writeVpeAccelerometerAdvancedTuning',['../group__register_access_methods.html#ga776565ea9660e7ea6eab65248fa4804a',1,'vn::sensors::VnSensor::writeVpeAccelerometerAdvancedTuning(VpeAccelerometerAdvancedTuningRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga0488bf44e3ff8f7e0d57825fcc82b27b',1,'vn::sensors::VnSensor::writeVpeAccelerometerAdvancedTuning(const vn::math::vec3f &amp;minFiltering, const vn::math::vec3f &amp;maxFiltering, const float &amp;maxAdaptRate, const float &amp;disturbanceWindow, const float &amp;maxTuning, bool waitForReply=true)']]],
  ['writevpeaccelerometerbasictuning',['writeVpeAccelerometerBasicTuning',['../group__register_access_methods.html#gaed652aaca1a0d8142dfe0c47944946f8',1,'vn::sensors::VnSensor::writeVpeAccelerometerBasicTuning(VpeAccelerometerBasicTuningRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga2b081e4663f6b258657102ff99b331b2',1,'vn::sensors::VnSensor::writeVpeAccelerometerBasicTuning(const vn::math::vec3f &amp;baseTuning, const vn::math::vec3f &amp;adaptiveTuning, const vn::math::vec3f &amp;adaptiveFiltering, bool waitForReply=true)']]],
  ['writevpebasiccontrol',['writeVpeBasicControl',['../group__register_access_methods.html#gad5d32d18516de69050a68ec01dfd9e9f',1,'vn::sensors::VnSensor::writeVpeBasicControl(VpeBasicControlRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga548b690abcd66ad41e4f8887454f971e',1,'vn::sensors::VnSensor::writeVpeBasicControl(protocol::uart::VpeEnable enable, protocol::uart::HeadingMode headingMode, protocol::uart::VpeMode filteringMode, protocol::uart::VpeMode tuningMode, bool waitForReply=true)']]],
  ['writevpegyrobasictuning',['writeVpeGyroBasicTuning',['../group__register_access_methods.html#ga333a4b81b63a49609accc34d566d5eb9',1,'vn::sensors::VnSensor::writeVpeGyroBasicTuning(VpeGyroBasicTuningRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga44a7b8ea131595e721b1fa80f70686e3',1,'vn::sensors::VnSensor::writeVpeGyroBasicTuning(const vn::math::vec3f &amp;angularWalkVariance, const vn::math::vec3f &amp;baseTuning, const vn::math::vec3f &amp;adaptiveTuning, bool waitForReply=true)']]],
  ['writevpemagnetometeradvancedtuning',['writeVpeMagnetometerAdvancedTuning',['../group__register_access_methods.html#gaa33b4d834b8ed19dfe72db907f616e51',1,'vn::sensors::VnSensor::writeVpeMagnetometerAdvancedTuning(VpeMagnetometerAdvancedTuningRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#gae46448ca00594bb8a885d5d00472761f',1,'vn::sensors::VnSensor::writeVpeMagnetometerAdvancedTuning(const vn::math::vec3f &amp;minFiltering, const vn::math::vec3f &amp;maxFiltering, const float &amp;maxAdaptRate, const float &amp;disturbanceWindow, const float &amp;maxTuning, bool waitForReply=true)']]],
  ['writevpemagnetometerbasictuning',['writeVpeMagnetometerBasicTuning',['../group__register_access_methods.html#gaba641b4bcd000f6d83e8f8fbcb11febc',1,'vn::sensors::VnSensor::writeVpeMagnetometerBasicTuning(VpeMagnetometerBasicTuningRegister &amp;fields, bool waitForReply=true)'],['../group__register_access_methods.html#ga5af71d719053359c9a9d2dd20b0d3d0d',1,'vn::sensors::VnSensor::writeVpeMagnetometerBasicTuning(const vn::math::vec3f &amp;baseTuning, const vn::math::vec3f &amp;adaptiveTuning, const vn::math::vec3f &amp;adaptiveFiltering, bool waitForReply=true)']]]
];
